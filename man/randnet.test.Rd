% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randnet.test.R
\name{randnet.test}
\alias{randnet.test}
\title{Test Against Random Networks}
\usage{
randnet.test(..., iter, cores)
}
\arguments{
\item{...}{Matrices or data frames.
Semantic networks to be compared against random networks}

\item{iter}{Numeric.
Number of iterations in bootstrap.
Defaults to \code{1000}}

\item{cores}{Number of computer processing cores to use for bootstrapping samples.
Defaults to \emph{n} - 1 total number of cores.
Set to any number between 1 and maxmimum amount of cores on your computer}
}
\value{
Returns a matrix containing p-values
for the network measures of the input networks against
the distribution of equivalent random networks. The last
two columns contain the mean (\code{"M.rand"}) and
standard deviation (\code{"SD.rand"}) of the network measures
for the random network distribution
}
\description{
Performs significance tests for global measures
of semantic networks against the global measures of equivalent
size (and density) random networks
}
\examples{
# Finalize rmatA
finalCmat <- SemNetCleaner::finalize(SemNetCleaner::convmat)

# Finalize rmatB
finalRmat <- SemNetCleaner::finalize(SemNetCleaner::rmat)

# Finalize rmatC
finalYmat <- SemNetCleaner::finalize(SemNetCleaner::rmat)

# Equate rmatA and rmatB
eq <- SemNetCleaner::equate.multi(finalCmat,finalRmat,finalYmat)

# Obtain respective equated response matrices
eqCmat <- eq$finalCmat
eqRmat <- eq$finalRmat
eqYmat <- eq$finalYmat

\dontrun{

#Compute networks
Cnet <- NetworkToolbox::TMFG(similarity(eqCmat))$A
Rnet <- NetworkToolbox::TMFG(similarity(eqRmat))$A
Ynet <- NetworkToolbox::TMFG(similarity(eqYmat))$A

#Perform random networks test
randnet.test(Cnet, Rnet, Ynet, iter = 1000)

}

}
\author{
Alexander Christensen <alexpaulchristensen@gmail.com>
}
